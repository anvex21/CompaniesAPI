name: Build and Test with Gradle and PostgreSQL

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: CompaniesDb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Wait for PostgreSQL
        run: |
          for i in {1..30}; do
            nc -z localhost 5432 && echo "Postgres is ready" && break
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Create test database
        run: |
          sudo apt-get update
          sudo apt-get install postgresql-client -y
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE \"CompaniesDb_test\";"

      - name: Test Connection
        run: |
          sudo apt-get update
          sudo apt-get install postgresql-client -y
          PGPASSWORD=${{ secrets.CI_DB_PASSWORD }} psql -h localhost -U ${{ secrets.CI_DB_USERNAME }} -d CompaniesDb -c '\dt'

      - name: Build and test with Gradle
        run: ./gradlew --no-daemon clean build
        env:
          QUARKUS_PROFILE: ci
          CI_DB_USERNAME: ${{ secrets.CI_DB_USERNAME }}
          CI_DB_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
          CI_DB_URL: ${{ secrets.CI_DB_URL }}
          FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}

      - name: SonarQube JacocoTest
        run: |
          ./gradlew test jacocoTestReport
          ./gradlew sonarqube \
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml